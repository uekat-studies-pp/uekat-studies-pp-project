name: Build and deploy

on:
    push:
        tags: ["v*.*.*"]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    backend-image:
        name: Build and push backend image
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            # - name: Set env
            #   run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            # - name: Test
            #   run: |
            #     echo $RELEASE_VERSION
            #     echo ${{ env.RELEASE_VERSION }}

            - name: Load .env file
              uses: xom9ikk/dotenv@v2

            - name: Set env
              run: |
                echo "RUST_IMAGE_VERSION=${RUST_IMAGE_VERSION}" >> $GITHUB_ENV
                echo "CACHEBUST=$(date +%s)" >> $GITHUB_ENV

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                images: |
                  ghcr.io/uekat-studies-pp/uekat-studies-pp-project-backend
                tags: |
                  type=schedule
                  type=ref,event=branch
                  type=ref,event=pr
                  type=semver,pattern={{version}}
                  type=semver,pattern={{major}}.{{minor}}
                  type=semver,pattern={{major}}
                  type=sha

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log into registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./docker/backend/prod/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                    RUST_IMAGE_VERSION=${{ env.RUST_IMAGE_VERSION }}
                    CACHEBUST=${{ env.CACHEBUST }}

    scrapper-image:
        name: Build and push cron app image
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            # - name: Set env
            #   run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            # - name: Test
            #   run: |
            #     echo $RELEASE_VERSION
            #     echo ${{ env.RELEASE_VERSION }}

            - name: Load .env file
              uses: xom9ikk/dotenv@v2

            - name: Set env
              run: |
                echo "RUST_IMAGE_VERSION=${RUST_IMAGE_VERSION}" >> $GITHUB_ENV
                echo "CACHEBUST=$(date +%s)" >> $GITHUB_ENV

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                images: |
                  ghcr.io/uekat-studies-pp/uekat-studies-pp-project-scrapper
                tags: |
                  type=schedule
                  type=ref,event=branch
                  type=ref,event=pr
                  type=semver,pattern={{version}}
                  type=semver,pattern={{major}}.{{minor}}
                  type=semver,pattern={{major}}
                  type=sha

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log into registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./docker/scrapper/prod/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                    RUST_IMAGE_VERSION=${{ env.RUST_IMAGE_VERSION }}
                    CACHEBUST=${{ env.CACHEBUST }}

    frontend-image:
        name: Build and push frontend image
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            # - name: Set env
            #   run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            # - name: Test
            #   run: |
            #     echo $RELEASE_VERSION
            #     echo ${{ env.RELEASE_VERSION }}

            - name: Load .env file
              uses: xom9ikk/dotenv@v2

            - name: Set env
              run: |
                echo "NODE_IMAGE_VERSION=${NODE_IMAGE_VERSION}" >> $GITHUB_ENV
                echo "CACHEBUST=$(date +%s)" >> $GITHUB_ENV

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                images: |
                  ghcr.io/uekat-studies-pp/uekat-studies-pp-project-frontend
                tags: |
                  type=schedule
                  type=ref,event=branch
                  type=ref,event=pr
                  type=semver,pattern={{version}}
                  type=semver,pattern={{major}}.{{minor}}
                  type=semver,pattern={{major}}
                  type=sha

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log into registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./docker/frontend/prod/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                    NODE_IMAGE_VERSION=${{ env.NODE_IMAGE_VERSION }}
                    CACHEBUST=${{ env.CACHEBUST }}
